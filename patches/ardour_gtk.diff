diff --git a/gdk/quartz/GdkQuartzWindow.c b/gdk/quartz/GdkQuartzWindow.c
index 7c08712..8b9dca4 100644
--- a/gdk/quartz/GdkQuartzWindow.c
+++ b/gdk/quartz/GdkQuartzWindow.c
@@ -625,6 +625,41 @@ update_context_from_dragging_info (id <NSDraggingInfo> sender)
   event.dnd.send_event = FALSE;
   event.dnd.context = _gdk_quartz_drag_source_context;
 
+  /* Check to see if the coordinates are inside a known GdkWindow */
+
+  GdkScreen* screen = gdk_window_get_screen (event.dnd.window);
+
+  if (screen) 
+    {
+       GList* windows, *list;
+       gint gx, gy;
+       
+       event.dnd.context->dest_window = NULL;
+
+       windows = gdk_screen_get_toplevel_windows (screen);
+       _gdk_quartz_window_nspoint_to_gdk_xy (aPoint, &gx, &gy);
+       
+       for (list = windows; list; list = list->next) 
+         {
+            GdkWindow* win = (GdkWindow*) list->data;
+            gint wx, wy;
+            gint ww, wh;
+            
+            gdk_window_get_root_origin (win, &wx, &wy);
+            ww = gdk_window_get_width (win);
+            wh = gdk_window_get_height (win);
+            
+            if (gx > wx && 
+                gy > wy &&
+                gx <= wx + ww && 
+                gy <= wy + wh) 
+              {
+                 /* found a toplevel GdkWindow at the drop position */
+                 event.dnd.context->dest_window = win;
+              }
+         }
+    }
+
   (*_gdk_event_func) (&event, _gdk_event_data);
 
   g_object_unref (event.dnd.window);
diff --git a/gtk/gtkdnd-quartz.c b/gtk/gtkdnd-quartz.c
index 28c5f78..3d9fd50 100644
--- a/gtk/gtkdnd-quartz.c
+++ b/gtk/gtkdnd-quartz.c
@@ -1928,16 +1928,29 @@ gtk_drag_source_info_destroy (GtkDragSourceInfo *info)
 static gboolean
 drag_drop_finished_idle_cb (gpointer data)
 {
-  gtk_drag_source_info_destroy (data);
+  GtkDragSourceInfo* info = (GtkDragSourceInfo*) data;
+  if (info->success) 
+    {
+       gtk_drag_source_info_destroy (data);
+    }
   return FALSE;
 }
 
 static void
-gtk_drag_drop_finished (GtkDragSourceInfo *info)
+gtk_drag_drop_finished (GtkDragSourceInfo *info, GtkDragResult result)
 {
-  if (info->success && info->delete)
-    g_signal_emit_by_name (info->source_widget, "drag-data-delete",
-                           info->context);
+        gboolean success = (result == GTK_DRAG_RESULT_SUCCESS);
+
+        if (!success) {
+                g_signal_emit_by_name (info->source_widget, "drag-failed",
+                                       info->context, GTK_DRAG_RESULT_NO_TARGET, &success);
+        }
+                
+        if (success && info->delete) {
+                g_signal_emit_by_name (info->source_widget, "drag-data-delete",
+                                       info->context);
+        }
+
 
   /* Workaround for the fact that the NS API blocks until the drag is
    * over. This way the context is still valid when returning from
@@ -1963,6 +1976,7 @@ _gtk_drag_source_handle_event (GtkWidget *widget,
 {
   GtkDragSourceInfo *info;
   GdkDragContext *context;
+  GtkDragResult result;
 
   g_return_if_fail (widget != NULL);
   g_return_if_fail (event != NULL);
@@ -1975,7 +1989,8 @@ _gtk_drag_source_handle_event (GtkWidget *widget,
   switch (event->type)
     {
     case GDK_DROP_FINISHED:
-      gtk_drag_drop_finished (info);
+      result = (gdk_drag_context_get_dest_window (context) != NULL) ? GTK_DRAG_RESULT_SUCCESS : GTK_DRAG_RESULT_NO_TARGET;
+      gtk_drag_drop_finished (info, result);
       break;
     default:
       g_assert_not_reached ();
