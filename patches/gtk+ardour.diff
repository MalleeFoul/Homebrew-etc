diff --git a/gdk/gdk.h b/gdk/gdk.h
index 3f0b1ac..c77bce6 100644
--- a/gdk/gdk.h
+++ b/gdk/gdk.h
@@ -237,5 +237,6 @@ guint    gdk_threads_add_timeout_seconds      (guint          interval,
 
 G_END_DECLS
 
-
+#define ARDOUR_CANVAS_NSVIEW_TAG 0xa2d0c2c4
+				 
 #endif /* __GDK_H__ */
diff --git a/gdk/quartz/gdkevents-quartz.c b/gdk/quartz/gdkevents-quartz.c
index f199298..3dee26e 100644
--- a/gdk/quartz/gdkevents-quartz.c
+++ b/gdk/quartz/gdkevents-quartz.c
@@ -43,6 +43,9 @@
      GDK_WINDOW_TYPE (window) != GDK_WINDOW_FOREIGN &&  \
      GDK_WINDOW_TYPE (window) != GDK_WINDOW_OFFSCREEN)
 
+/* This is the NSView not owned by GDK where a mouse down event occurs */
+static NSView *foreign_mouse_down_view;
+
 /* This is the window corresponding to the key window */
 static GdkWindow   *current_keyboard_window;
 
@@ -726,14 +729,36 @@ find_window_for_ns_event (NSEvent *nsevent,
   NSPoint screen_point;
   NSEventType event_type;
 
+ 
+  event_type = [nsevent type];
+
+  if (foreign_mouse_down_view) {
+	  switch (event_type) {
+	  case NSLeftMouseUp:
+	  case NSRightMouseUp:
+	  case NSOtherMouseUp:
+		  /* mouse up happened, foreign view needs to handle it
+		     but we will also assume that it does (e.g. ends
+		     a drag and whatever goes with it) and so we reset
+		     foreign_mouse_down_view.
+		  */
+		  foreign_mouse_down_view = 0;
+		  return NULL;
+
+	  default:
+		  /* foreign view needs to handle this */
+		  return NULL;
+	  }
+  }
+
   view = (GdkQuartzView *)[[nsevent window] contentView];
 
   toplevel = get_toplevel_from_ns_event (nsevent, &screen_point, x, y);
   if (!toplevel)
     return NULL;
+  
   _gdk_quartz_window_nspoint_to_gdk_xy (screen_point, x_root, y_root);
 
-  event_type = [nsevent type];
 
   switch (event_type)
     {
@@ -770,10 +795,10 @@ find_window_for_ns_event (NSEvent *nsevent,
              * event mask should not be checked.
              */
 	    if (!grab->implicit
-                && (grab->event_mask & get_event_mask_from_ns_event (nsevent)) == 0)
-              return NULL;
+            && (grab->event_mask & get_event_mask_from_ns_event (nsevent)) == 0)
+          return NULL;
 
-            if (grab->owner_events)
+        if (grab->owner_events)
               {
                 /* For owner events, we need to use the toplevel under the
                  * pointer, not the window from the NSEvent, since that is
